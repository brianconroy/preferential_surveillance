% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simData.R
\name{simLocations}
\alias{simLocations}
\title{simLocations}
\usage{
simLocations(r, beta, w, cells.all, d, seed = NULL)
}
\arguments{
\item{r:}{RasterBrick. Raster representing the study region whose values are covariates associated with 
the sampling process.}

\item{beta:}{numeric. Vector of parameters (including intercept) associated with the covariates in r.}

\item{w:}{numeric. Vector of spatial random effects simulated from a Gaussian process.}

\item{cells.all:}{numeric. Vector of integers representing id's of non-null cells in raster r.}

\item{d:}{matrix. Distance matrix describing distances between cells in raster r.}

\item{seed:}{numeric. Optional random seed value for reproducibility.}
}
\value{
a list with the following keys:

\itemize{
  \item status: numeric. Vector of 0/1 indicators representing whether the corresponding cell 
  in cells.all was observed.
  \item cells: numeric. Vector of cell ids from cells.all that were observed.
  \item coords: matrix. Matrix of latitude (x) and longitude (y) coordinates from observed cells.
  \item x: matrix. Matrix of intercept and covariate values from raster r at the center point of 
  each cell in r.
}
}
\description{
In this package, a disease surveillance system collects samples for a disease
over cells in a raster. The sampling process may be preferential,
assigning sampling locations in a way that is stochastically related
to the disease process. Typically preferential sampling manifests itself when
sampling locations are generally assigned in areas thought to be at high risk
for the disease.
}
\details{
simLocations simulates sample sites preferentially over a raster study region.
}
\examples{

# create covariate raster
r <- aggregate(load_prism_pcs(), fact=10)

# get cell ids
cells.all <- c(1:ncell(r))[!is.na(values(r[[1]]))]

# get distance matrix 
d <- form_distance_matrix(r, cells.all)

# simulate Gaussian process
sigma <- Exponential(d, range = 7, phi = 5)
w <- mvrnorm(n = 1, mu = rep(0, length(cells.all)), sigma)

# simulate locations
locs <- simLocations(r, c(-1.50, 1.00, -0.25), w, cells.all, d)

# view raster of observed cells
r_loc <- r[[1]]
r_loc[!is.na(r_loc[])] <- locs$status
plot(r_loc)

}
